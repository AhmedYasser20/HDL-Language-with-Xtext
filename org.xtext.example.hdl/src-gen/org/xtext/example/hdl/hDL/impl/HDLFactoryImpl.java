/**
 * generated by Xtext 2.35.0
 */
package org.xtext.example.hdl.hDL.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import org.xtext.example.hdl.hDL.*;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class HDLFactoryImpl extends EFactoryImpl implements HDLFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static HDLFactory init()
  {
    try
    {
      HDLFactory theHDLFactory = (HDLFactory)EPackage.Registry.INSTANCE.getEFactory(HDLPackage.eNS_URI);
      if (theHDLFactory != null)
      {
        return theHDLFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new HDLFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public HDLFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case HDLPackage.MODEL: return createModel();
      case HDLPackage.PT_ENTITY_DECL: return createPTEntityDecl();
      case HDLPackage.PT_ARCH_DECL: return createPTArchDecl();
      case HDLPackage.PT_SIGNAL_DECL: return createPTSignalDecl();
      case HDLPackage.PT_SIGNAL_ASSIGN: return createPTSignalAssign();
      case HDLPackage.PT_IDENTIFIER: return createPTIdentifier();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Model createModel()
  {
    ModelImpl model = new ModelImpl();
    return model;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PTEntityDecl createPTEntityDecl()
  {
    PTEntityDeclImpl ptEntityDecl = new PTEntityDeclImpl();
    return ptEntityDecl;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PTArchDecl createPTArchDecl()
  {
    PTArchDeclImpl ptArchDecl = new PTArchDeclImpl();
    return ptArchDecl;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PTSignalDecl createPTSignalDecl()
  {
    PTSignalDeclImpl ptSignalDecl = new PTSignalDeclImpl();
    return ptSignalDecl;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PTSignalAssign createPTSignalAssign()
  {
    PTSignalAssignImpl ptSignalAssign = new PTSignalAssignImpl();
    return ptSignalAssign;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PTIdentifier createPTIdentifier()
  {
    PTIdentifierImpl ptIdentifier = new PTIdentifierImpl();
    return ptIdentifier;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public HDLPackage getHDLPackage()
  {
    return (HDLPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static HDLPackage getPackage()
  {
    return HDLPackage.eINSTANCE;
  }

} //HDLFactoryImpl
