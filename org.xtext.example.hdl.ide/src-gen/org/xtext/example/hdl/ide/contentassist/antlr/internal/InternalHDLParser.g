/*
 * generated by Xtext 2.35.0
 */
parser grammar InternalHDLParser;

options {
	tokenVocab=InternalHDLLexer;
	superClass=AbstractInternalContentAssistParser;
}

@header {
package org.xtext.example.hdl.ide.contentassist.antlr.internal;
import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.hdl.services.HDLGrammarAccess;

}
@members {
	private HDLGrammarAccess grammarAccess;
	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
	
	{
		tokenNameToValue.put("Colon", "':'");
		tokenNameToValue.put("Semicolon", "';'");
		tokenNameToValue.put("LessThanSignEqualsSign", "'<='");
		tokenNameToValue.put("Is", "'is'");
		tokenNameToValue.put("Of", "'of'");
		tokenNameToValue.put("End", "'end'");
		tokenNameToValue.put("Begin", "'begin'");
		tokenNameToValue.put("SIGNAL", "'SIGNAL'");
		tokenNameToValue.put("Entity", "'entity'");
		tokenNameToValue.put("Architecture", "'architecture'");
	}

	public void setGrammarAccess(HDLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		String result = tokenNameToValue.get(tokenName);
		if (result == null)
			result = tokenName;
		return result;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getGroup()); }
		(rule__Model__Group__0)
		{ after(grammarAccess.getModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleentity_decl
entryRuleentity_decl
:
{ before(grammarAccess.getEntity_declRule()); }
	 ruleentity_decl
{ after(grammarAccess.getEntity_declRule()); } 
	 EOF 
;

// Rule entity_decl
ruleentity_decl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEntity_declAccess().getGroup()); }
		(rule__Entity_decl__Group__0)
		{ after(grammarAccess.getEntity_declAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulearch_decl
entryRulearch_decl
:
{ before(grammarAccess.getArch_declRule()); }
	 rulearch_decl
{ after(grammarAccess.getArch_declRule()); } 
	 EOF 
;

// Rule arch_decl
rulearch_decl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArch_declAccess().getGroup()); }
		(rule__Arch_decl__Group__0)
		{ after(grammarAccess.getArch_declAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulesignal_decl
entryRulesignal_decl
:
{ before(grammarAccess.getSignal_declRule()); }
	 rulesignal_decl
{ after(grammarAccess.getSignal_declRule()); } 
	 EOF 
;

// Rule signal_decl
rulesignal_decl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSignal_declAccess().getGroup()); }
		(rule__Signal_decl__Group__0)
		{ after(grammarAccess.getSignal_declAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulesignal_assign
entryRulesignal_assign
:
{ before(grammarAccess.getSignal_assignRule()); }
	 rulesignal_assign
{ after(grammarAccess.getSignal_assignRule()); } 
	 EOF 
;

// Rule signal_assign
rulesignal_assign 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSignal_assignAccess().getGroup()); }
		(rule__Signal_assign__Group__0)
		{ after(grammarAccess.getSignal_assignAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulelhs
entryRulelhs
:
{ before(grammarAccess.getLhsRule()); }
	 rulelhs
{ after(grammarAccess.getLhsRule()); } 
	 EOF 
;

// Rule lhs
rulelhs 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLhsAccess().getIdAssignment()); }
		(rule__Lhs__IdAssignment)
		{ after(grammarAccess.getLhsAccess().getIdAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulerhs
entryRulerhs
:
{ before(grammarAccess.getRhsRule()); }
	 rulerhs
{ after(grammarAccess.getRhsRule()); } 
	 EOF 
;

// Rule rhs
rulerhs 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRhsAccess().getIdAssignment()); }
		(rule__Rhs__IdAssignment)
		{ after(grammarAccess.getRhsAccess().getIdAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getEntityDeclAssignment_0()); }
	(rule__Model__EntityDeclAssignment_0)
	{ after(grammarAccess.getModelAccess().getEntityDeclAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getArchDeclAssignment_1()); }
	(rule__Model__ArchDeclAssignment_1)
	{ after(grammarAccess.getModelAccess().getArchDeclAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Entity_decl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity_decl__Group__0__Impl
	rule__Entity_decl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity_decl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntity_declAccess().getEntityKeyword_0()); }
	Entity
	{ after(grammarAccess.getEntity_declAccess().getEntityKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity_decl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity_decl__Group__1__Impl
	rule__Entity_decl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity_decl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntity_declAccess().getNameAssignment_1()); }
	(rule__Entity_decl__NameAssignment_1)
	{ after(grammarAccess.getEntity_declAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity_decl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity_decl__Group__2__Impl
	rule__Entity_decl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity_decl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntity_declAccess().getIsKeyword_2()); }
	Is
	{ after(grammarAccess.getEntity_declAccess().getIsKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity_decl__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity_decl__Group__3__Impl
	rule__Entity_decl__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity_decl__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntity_declAccess().getEndKeyword_3()); }
	End
	{ after(grammarAccess.getEntity_declAccess().getEndKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity_decl__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity_decl__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity_decl__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntity_declAccess().getSemicolonKeyword_4()); }
	Semicolon
	{ after(grammarAccess.getEntity_declAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Arch_decl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arch_decl__Group__0__Impl
	rule__Arch_decl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arch_decl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArch_declAccess().getArchitectureKeyword_0()); }
	Architecture
	{ after(grammarAccess.getArch_declAccess().getArchitectureKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arch_decl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arch_decl__Group__1__Impl
	rule__Arch_decl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Arch_decl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArch_declAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
	{ after(grammarAccess.getArch_declAccess().getIDTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arch_decl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arch_decl__Group__2__Impl
	rule__Arch_decl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Arch_decl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArch_declAccess().getOfKeyword_2()); }
	Of
	{ after(grammarAccess.getArch_declAccess().getOfKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arch_decl__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arch_decl__Group__3__Impl
	rule__Arch_decl__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Arch_decl__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArch_declAccess().getEntityIdAssignment_3()); }
	(rule__Arch_decl__EntityIdAssignment_3)
	{ after(grammarAccess.getArch_declAccess().getEntityIdAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arch_decl__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arch_decl__Group__4__Impl
	rule__Arch_decl__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Arch_decl__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArch_declAccess().getIsKeyword_4()); }
	Is
	{ after(grammarAccess.getArch_declAccess().getIsKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arch_decl__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arch_decl__Group__5__Impl
	rule__Arch_decl__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Arch_decl__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArch_declAccess().getSignalDeclsAssignment_5()); }
	(rule__Arch_decl__SignalDeclsAssignment_5)*
	{ after(grammarAccess.getArch_declAccess().getSignalDeclsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arch_decl__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arch_decl__Group__6__Impl
	rule__Arch_decl__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Arch_decl__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArch_declAccess().getBeginKeyword_6()); }
	Begin
	{ after(grammarAccess.getArch_declAccess().getBeginKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arch_decl__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arch_decl__Group__7__Impl
	rule__Arch_decl__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Arch_decl__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArch_declAccess().getSignalAssignAssignment_7()); }
	(rule__Arch_decl__SignalAssignAssignment_7)*
	{ after(grammarAccess.getArch_declAccess().getSignalAssignAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arch_decl__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arch_decl__Group__8__Impl
	rule__Arch_decl__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Arch_decl__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArch_declAccess().getEndKeyword_8()); }
	End
	{ after(grammarAccess.getArch_declAccess().getEndKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arch_decl__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arch_decl__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arch_decl__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArch_declAccess().getSemicolonKeyword_9()); }
	Semicolon
	{ after(grammarAccess.getArch_declAccess().getSemicolonKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Signal_decl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Signal_decl__Group__0__Impl
	rule__Signal_decl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal_decl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignal_declAccess().getSIGNALKeyword_0()); }
	SIGNAL
	{ after(grammarAccess.getSignal_declAccess().getSIGNALKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal_decl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Signal_decl__Group__1__Impl
	rule__Signal_decl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal_decl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignal_declAccess().getNameAssignment_1()); }
	(rule__Signal_decl__NameAssignment_1)
	{ after(grammarAccess.getSignal_declAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal_decl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Signal_decl__Group__2__Impl
	rule__Signal_decl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal_decl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignal_declAccess().getColonKeyword_2()); }
	Colon
	{ after(grammarAccess.getSignal_declAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal_decl__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Signal_decl__Group__3__Impl
	rule__Signal_decl__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal_decl__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignal_declAccess().getSignalTypeAssignment_3()); }
	(rule__Signal_decl__SignalTypeAssignment_3)
	{ after(grammarAccess.getSignal_declAccess().getSignalTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal_decl__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Signal_decl__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal_decl__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignal_declAccess().getSemicolonKeyword_4()); }
	Semicolon
	{ after(grammarAccess.getSignal_declAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Signal_assign__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Signal_assign__Group__0__Impl
	rule__Signal_assign__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal_assign__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignal_assignAccess().getLhsAssignment_0()); }
	(rule__Signal_assign__LhsAssignment_0)
	{ after(grammarAccess.getSignal_assignAccess().getLhsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal_assign__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Signal_assign__Group__1__Impl
	rule__Signal_assign__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal_assign__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignal_assignAccess().getLessThanSignEqualsSignKeyword_1()); }
	LessThanSignEqualsSign
	{ after(grammarAccess.getSignal_assignAccess().getLessThanSignEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal_assign__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Signal_assign__Group__2__Impl
	rule__Signal_assign__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal_assign__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignal_assignAccess().getRhsAssignment_2()); }
	(rule__Signal_assign__RhsAssignment_2)
	{ after(grammarAccess.getSignal_assignAccess().getRhsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal_assign__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Signal_assign__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal_assign__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignal_assignAccess().getSemicolonKeyword_3()); }
	Semicolon
	{ after(grammarAccess.getSignal_assignAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__EntityDeclAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getEntityDeclEntity_declParserRuleCall_0_0()); }
		ruleentity_decl
		{ after(grammarAccess.getModelAccess().getEntityDeclEntity_declParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ArchDeclAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getArchDeclArch_declParserRuleCall_1_0()); }
		rulearch_decl
		{ after(grammarAccess.getModelAccess().getArchDeclArch_declParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity_decl__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntity_declAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getEntity_declAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arch_decl__EntityIdAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArch_declAccess().getEntityIdPTEntityDeclCrossReference_3_0()); }
		(
			{ before(grammarAccess.getArch_declAccess().getEntityIdPTEntityDeclIDTerminalRuleCall_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getArch_declAccess().getEntityIdPTEntityDeclIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getArch_declAccess().getEntityIdPTEntityDeclCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arch_decl__SignalDeclsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArch_declAccess().getSignalDeclsSignal_declParserRuleCall_5_0()); }
		rulesignal_decl
		{ after(grammarAccess.getArch_declAccess().getSignalDeclsSignal_declParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arch_decl__SignalAssignAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArch_declAccess().getSignalAssignSignal_assignParserRuleCall_7_0()); }
		rulesignal_assign
		{ after(grammarAccess.getArch_declAccess().getSignalAssignSignal_assignParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal_decl__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSignal_declAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getSignal_declAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal_decl__SignalTypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSignal_declAccess().getSignalTypeIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getSignal_declAccess().getSignalTypeIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal_assign__LhsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSignal_assignAccess().getLhsLhsParserRuleCall_0_0()); }
		rulelhs
		{ after(grammarAccess.getSignal_assignAccess().getLhsLhsParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal_assign__RhsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSignal_assignAccess().getRhsRhsParserRuleCall_2_0()); }
		rulerhs
		{ after(grammarAccess.getSignal_assignAccess().getRhsRhsParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Lhs__IdAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLhsAccess().getIdPTSignalDeclCrossReference_0()); }
		(
			{ before(grammarAccess.getLhsAccess().getIdPTSignalDeclIDTerminalRuleCall_0_1()); }
			RULE_ID
			{ after(grammarAccess.getLhsAccess().getIdPTSignalDeclIDTerminalRuleCall_0_1()); }
		)
		{ after(grammarAccess.getLhsAccess().getIdPTSignalDeclCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rhs__IdAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRhsAccess().getIdPTSignalDeclCrossReference_0()); }
		(
			{ before(grammarAccess.getRhsAccess().getIdPTSignalDeclIDTerminalRuleCall_0_1()); }
			RULE_ID
			{ after(grammarAccess.getRhsAccess().getIdPTSignalDeclIDTerminalRuleCall_0_1()); }
		)
		{ after(grammarAccess.getRhsAccess().getIdPTSignalDeclCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}
